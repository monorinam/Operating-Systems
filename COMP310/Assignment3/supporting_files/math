full: 10 direct
first_ptr_index = 10
num_blocks_needed = 20
indirect_needed = 20-(12-10) = 18
first_indirect = 0;
can proceed

Now,
i = 0
data_ptr[0+first_ptr_index=10] = fill
data_ptr[1+first_ptr_index=11] = fill
(i + first_p_i == 12) false so then go to indirect
indirect_array[i-(12-first_ptr_index) = 2 - (12-10) = 0] = fill
indirect_array[3-(12-10)] = fill
indirect_array[4 - (12-10)] = error release_flag = 4

so release
for(int i = 3;i>-0;i--)
{
	1. i = 3, i + 10 > 12, so release indirect_array[3 - (12-10)] 
	2. release indirect_Array[2-(12-10)]
	3. release data_ptr[1+10]
	4. release data_ptr[0+10]
}

length = 4200
size is 9216 (0-8 blocks long)
num_blocks_needed = (9000+4200 - 9216) = 3 + 1 = 4
f_p_i = 9
indirect_needed = 4-(12-9) = 1
(filled = )
so, so say 
rwptr = 9000 (inside block i = 8)


to write
start at block 8, write length = (9*1024) - 9000 = 216
length = 3984
next write block 9, length = 2960
then write block 10, 1936
then write block 11, 912
then write in block 0, 0
then go to block 10,11,12,13 until length is 0
so
1. 9000/1024 + 1 = 

